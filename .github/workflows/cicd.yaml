name: Continuous Integration & Delivery
on:
  push:
    branches: [ graphene-v2 ]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python: 3.6
            django: 2.2
            toxenv: py36-django22
          - python: 3.6
            django: 3.0
            toxenv: py36-django30
          - python: 3.7
            django: 2.2
            toxenv: py37-django22
          - python: 3.7
            django: 3.0
            toxenv: py37-django30
          - python: 3.8
            django: 2.2
            toxenv: py38-django22
          - python: 3.8
            django: 3.0
            toxenv: py38-django30
          - python: 3.9
            django: 2.2
            toxenv: py39-django22
          - python: 3.9
            django: 3.0
            toxenv: py39-django30
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        name: Set up Python ${{ matrix.python }} ${{ matrix.django }}
        with:
          python-version: ${{ matrix.python }}
      - name: Install pip packages
        run: |
          pip install pip --upgrade
          pip install codecov poetry tox
      - name: "Run tox - testenv: ${{ matrix.toxenv }}"
        env:
          DJANGO: ${{ matrix.django }}
          TOXENV: ${{ matrix.toxenv }}
        run: tox
      # - name: Run notification script
      #   env:
      #     GITHUB_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
      #     GITHUB_JOB_STATUS: ${{ job.status }}
      #     GITHUB_RUN_URL: ${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}
      #     TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      #     TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
      #   run: ./scripts/notification.sh

  quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python: 3.6
            toxenv: quality
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        name: Set up Python ${{ matrix.python }}
        with:
          python-version: ${{ matrix.python }}
      - name: Install pip packages
        run: |
          pip install pip --upgrade
          pip install poetry tox
      - name: "Run tox - testenv: ${{ matrix.toxenv }}"
        env:
          TOXENV: ${{ matrix.toxenv }}
        run: tox

  security:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python: 3.6
            toxenv: security
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        name: Set up Python ${{ matrix.python }}
        with:
          python-version: ${{ matrix.python }}
      - name: Install pip packages
        run: |
          pip install pip --upgrade
          pip install poetry tox
      - name: "Run tox - testenv: ${{ matrix.toxenv }}"
        env:
          TOXENV: ${{ matrix.toxenv }}
        run: tox
